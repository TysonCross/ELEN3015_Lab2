%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 487.000000 327.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.4 (Build 17E199) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 487 327
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 487 327
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /space put
dup 35 /one put
dup 36 /two put
dup 37 /ellipsis put
dup 38 /five put
dup 39 /three put
dup 40 /b put
dup 41 /i put
dup 42 /t put
dup 43 /six put
dup 44 /four put
dup 45 /equal put
dup 46 /n put
dup 47 /p put
dup 48 /u put
dup 49 /s put
dup 50 /o put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



001C00C6001C000D5D410500D5001C00E5001C00025D410500DA002900EA002900025D411B0009002900190029002900290039002900490029005900290069002900790029008900290099002900A9002900B9002900C90029000D5DB8000910B80033DCB8001310B80039DC00BA002E000E00032BB8002E10BA0004002100032BB8000410BA0018002400032BB8001810B8000410B80000DC303101332E0123220E0215141E0233323E0235342E0223220607273E0333321607321E0215140E0223222E0235343E02019E550868584C643C191134604F435B37181E3751333A591E02010E254236333E7A2436241113243523233725141326360210585D406A8949387864402D45542731543E232C3102295E51353AC31A2B3B211F392C19192A3A21213B2B19000002003000760228018400030007001700BA0000000100032BBA0005000400032BB800051030313715213D0221153001F8FE08BA444486444400000000020043FFF5022D02CA0018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800002FBA001E000900032BB8001E10BA0013002800032BB8001310303113113335331E0333323E0235342E0223220607231101140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D271302CAFD3645171F12082A49623737624B2C272B010BFE3D2648382221364726244637222036450000000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB02050000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D41


00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/equal 9 def
/b 10 def
/i 11 def
/n 12 def
/o 13 def
/p 14 def
/s 15 def
/t 16 def
/u 17 def
/ellipsis 18 def
/uni2B91 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92626C4DEA81D313B50D8F4EBFA95F2709469CAA9CCEDFB298F70C76D2A079C6064909D0D6374E9360EB8776D8D76D6B6AF3EB748CD2A3628EB56CBAB35165193D4E5F9DB729E34BEF754A8E9338CDFF953D76EDA99D03F83948F794A0616E87457848A58CEEF8A9254EF8E247A8A3B2F79CA3F53DA578846C641FCAEC350513A2C25F46EDC75AFC4D17DCBBF5A20432B54477D9ED10AAED1550209EAD1DE16A92BFC44DDBCB266187D4E5FC74193A0810E5E643C546C5A44C191CB010884AAE0F647243F1271D40757CE9E107BBFDA56DFDFF68523C6B488849B021948C27BB3474D045DBA0FC8AC0AEA8431F7C1887156BC5F94EBFBF5113B853CC45D4C97C94DD5E8807B90B9F2E5B6CDE6B45132F036D7AED9574DC81021911E4E05B961C7964503A29410A24806F5F450A8679B69B561304B5C298FCAA6B0F2C1211E162EB89997F97B60566A346153F19E9DB5F835692843FEDCA7A40D731E108CE5AEF9A080270A011B4FFA17B0D6D41653AD24C7A7EAD27ADABBF3691B82D1D7C174D6DA4053A2412E7F07208582A48350797CFCD0CA6B926A99F7F461812D69F8B048D57E898940FD8BF3A46E5A2295598F15D63BE03A08BFBCF01ACE37373857AE57C850F035CD464FE10E005BC678920D2898C264FAC269BBA7B0A89490EEBDFF7EC12F16EF668CC18CA6B540389B6795E43491D2490AF2D261DE80C0ED70DC01967F2D24734B38CE861FE1DEDC849BFEC18539A92F93445C4B1FD37835032AA4076
8ECF0A6DA59138F368885AF2D1A29F7290F336FB33283C9A63FCA30A3A154D3528FFBC1B42D596BC6EEB227F0A2947D4CEA4910136092479136B34A47F8FC3CE8D03D1DA0B1CF2053A9C8C5B209801F6908BD175C22A51A18BCF960F3256309983DD8119FBB71907C6F5EA4990308A5E1712BC2C2502694F3CC14417AD087105415ED023310CD7040238689C2E7B14F62291135C31880DC35AF142249B76417D531D15A9588F0ADA271558DE252A636709B128694C7913AB5B48E57D75946CFBC14E100F58F39670F11189DFF30652A99BF7A0756E228A7426EBB3B444B5A4505BEE37794EF188C278AFC071FA432EFA11B159A7C25DAD3A444FFE0F9D548733C6DF1F098D32E3680408EAF7F8A8A1F9FA1E1F19BF19061FEC9041A8351FA5879CE0E2552AB962680A3E65B9550A41EF6FBA2FABC055BF013F5226088FD87FB6F557F588CF6FB2A92A25BB3E047D99AE4FFB64028179AFD5C6BF7DD62C9BB698121A97EB6641AA1D42789CB63C5B57BE16689814AE5714E86750D9040B4408B8D71483DE73A8C9748FE82E504202C56E5C6CB96CCE15498D3B867CF15AA63C6867AF078508B066E6895E3886D6509EDC8494422A27E20C14449689F4933D569EA6F2869E46F09BD0C80376ED6D285BD70A3A512BDD73E2ED4391DCB99B75B3F7E3A6F85AB13A83C127411DF520B51A5E33E4FDEF6B950165206E013818EBE7C8055CEE05BFF7DF2588AAA4A733BA6446FE792D3274F538F3A431323860ED7A607536AC65C2397B450BB030CBFAF8E88EC015FF7082C13196019BFD874A402F8E541603651B33A720BED5FC7C69932132185FB7590647D6B0D113A57AC68AA22057B90ABDCE8B9512ACC46EB76FCFAA6F3B79F45B1504E4CF2749D026925C71FFB430E9840FC4BC7F0ACAEFA2A2630E34935F1563B3CAA3814B2D49A23AC5922ABE6E874A2C6D24F711A7CEF07F7D1E479E1F0C1CDF3CE882B5313E201965C7333C2FBA4FBFAA0DE2AC963DA067E593C8D450328B8CF076E7011EF1394DEE53C65A8AEF34908528A8D92DAB892FAC0891FBC9E60F9EDFA8BEF734AC13B4D9406954558F5623CCF6E07452E8FF07CEF58FAB71CAE2FC2101641020472B80A35305DFAFCBC5C1236117FD277A8CDE2905C4115723789231D7ED620B17485297320ACBA99CC1697B4137B223F1BF5F02F9F3F91D2F9241BD62828043B2C719A742A1AC74F405AB227C9D0FC58B6DB0CB94FE3ECECBB4C15070BECD784ABE212FA66657AA5131FB874EA21A5601B6630830CD20612DBA17BF9682F6E53B9701A67AB38D9428C7519A1DA379A263C1BD4C48068387D8FEF516C095E049F6CD49340C0B0B73D085052AB418AAE9495E739DAD0C1567E66FCF7DFC5BCA7D15929684BA244940AFDC4D38BEB51BEE50BC549EF1D2B12753E199E5CFD10B4EBD9DE16C34A8
4415C73FFD6ADD2D8C33FB94FFCE919D0363C7FB311A894A185BC616F806A47BB2B9F92E059AB6BFE3296C151747A7A6B34894A06177755E6F0562BF66D20A92D25B6C3F488E946DC1B6A729331ED7C0655BC9530089F24B1DCE6355F5CCB6B9BE20C0E9DFA220F738DEB5543A22EC11D6A7F6F92ACACDB2E213D569B368A57488CD1959245AA077F387C65B43AB01FD14D80DD3DF983A6BC06682A501032541258026F7C46EA908C8D71DD107EE4881D608C198E910410F2568DE4433F0310BDE28116E993642CB1797564071C5DBD3195D2B0B1A7C0F699C2B76894E018F4DFCA5C3D1A13FF250B9B4450620F2C051DDE4976C8BCE1335963C996F0A67A438A56838C9EE3208B177ACDDD65F62D8E8020861F66D4B224FD986BED1A36A2C77034A6E5F4D3B74D69A5E221E567197E85B3A031EC25AF90C4CD2858D7F3A08179A74915218A307FEA55532B06365872FD6E028CDBE3E85910E410EDC132BF6F097D3AF48E0C63BF1D410E3303F7D4B3697D6F617745707EEAF9678AD94FACA4345EB2590FE8CB28E48185B848B664551B3E4D1D28C4D455D0B1730D36F95C6A308E38A571DC17E7FCB721399C06B3437602E54377B40B33A99B72D1334272388C340454E7BCF8284C7B18B95513D1BCA5071A6CA26688B2A2648A92A99A6003CF939989838E5783D23C1DB4575C3525E48D32FD92FCCEE3206DAA738E3BB6D45B90724B4061D6864D10F05E1EB1953C7A2887AAE2FA1A5BBEC3882F0C80623A0F443609F35C0EC9F2F0B8DC8BAF650D6B999DE15D395994959CE58CA95F203E116F4781D3FE0D03DDE74AFDDC56A12C635FD387FDB88CDFA6FD41A7692049F911ACE8C533226A63644E92B7F3F8F9C642408E6B482745573F5A0853FFCADCBB9D94A293A74E17DBD7100A3CC0DCDCC1AC4FFDBB305B9608C467602E97807E21CD56C043CFE7F9D6FFA924326706E7687D3EE222688F1309D4E47A198B05AE30F8BDE9627B47DB89C893F926730F2A3C219CBEA3055A722CC04318D4E06A7488600C2E3C86C194C8AA5E77AB2F93DB1B62DB492676532DADC71C5095E4AD5314E0C678E9D5914C6935210EE164464BF43F12F730C980BEB5DADEB5AD90D31F860A0EF4345570A7BB6F3B85468E2E72051A0A689B9EA9BC656D89271DB5128083EFAE0CB61702F1C560A7821AF02E003E3642C6FF44A96FDD6DE50382BF3C324A3DCA02340C807F421E6A600C37FF43F28E9256C529415C75C9E7D715D65BF96FCB191298837B8A57A3ADA9F58B815CCF6E3805387357A8FB12C85F5DCB739648FB37766F96EAC53E40776E087412461A5A3498B0C92010AA630507DBCADE17FE1C32873DB3631068E11F27538AE50C3C830439D33869EDA7A453892DCEFD668C17612B3C184BCD7C1A1214F722DF908404ED72BA25308EB413E7451D5A99A3D27
42AC35D26544768A5464D9F991811E9B5469169D8B0A169661763C2694DDAB0C8175FA1CF8C9256ABA4138A40EB42881797C95F7F4ADC96F74E0D2DDC770DDE8568D1AA65BAABF556E0B65002F27CC52135945330595C7EFC1E4E128E9C4B36A47D515CA34920D933F988D54B59C45FED0986CF04F5977DB41EE309959D3149EBC533ECC6DF4DC5519C864D61BF0EECA9B1CF03ADB256927A72B45649FC1CFB6F806DE128924D976BFBCD559BDC9EF6591D0F739EDB14D9DBF8E2EA085FB419EA134F6B628AAF17D9C97BED4029D4990956E0E4074168243DF5CB278DE9EECAA64E803E4FD66BF0A058158F67065D3B5A4776C3AD19E025218844ABCD68C1C342EA53C7A26F457ADCA6AC54E76E5D4A972B4271B9A7E9348CA8AAD58EF6C63C0FBEC883B34872B5C62212AC020DF982EB519879EC470FB431EA154C9F975A73BEA04A9D3A4393728B35C3942E547985E1B55A3BB7098188944804F8FDE6E2A085674BF909D366334DAE496FA56ED08C71FA81598B4313C7090F6249A5B6A0CDC5D81AD67F76D6CA388F7EE99DA303B7DA160604F8329CA278E141FF9EAE31DC37284B3AB20A4A510451D165A228AD28D7CC5FE997184F0C47B76A2153EBFEBC396262153399C69E193A8EF0F1D176750B9E25C3802AA2DFD150DC726DBD8D896D4EEA076DEECE9D459F2312F5DF64C1A3261BA989F74E7238F31D91B5973515C2332AAEF601907385014CD55F694104651FB9A2074ED5B238A923B1165F133DB744289A7583F9AE9F8CCDAC7DF84706FA829619D0019540F6390C5FA7EFB82E51E9020317FAFD88C1599C5B94D4BD66206E7C95B967FA98E46A36DE92C2E583840838D9950B97970F3EB53A4579A1A413BFC03261E683EE1CD2E476B6C112685F79E2D81AD867FDE616B0CB626C87237617338FC0C5833B644AB975AE08859EB8D2B55F53CA5356D972FEDDDA3179E0895127EC56765E17A05637F2FB52F9A049D0D9D413707169B08484B0B17235EAAF58F42AE3D691C42A842988764CEA14E69D0271057FCADA1C4CAA4FA98570426DE32EA9EB95731BE9A0FBE7B2E8D815E5F4D8D061D0F3C5115F1BE775E34A01CE6A490C61277BA8537BCF71DEF4FBC479BC475421C6BE4176432FFAC3054A3241B077DCE781FB4478F83EC2C5AC538B2A2C83C006DE4498F5C5724DD2FED9116A59CFADDB92D646CFEB230880BB55CCF111B051DCC33FF9E953CF0E4E5AE70D190A938CA89229CE877146F73D5C99EEA3DFFEFEC4720F8EB0E82C1A57EC483ADBE79E093B4DA4EF2C0BFFD17DA20250FFED349DEE55C3C374C1A1520E515A83C7B8B373C29793FD846D7D02EA2B8880686AC74DFE69F2841045EE682A15F298F43D76706B1A7C9E8892A46B73D2000E2ABD77C50F3A03F1EAE54913045999A71B958B5D621019622C748FDCA5ECC7173
8933A2FB88EEE1BAEC35724353E020C4EE65D2E506D886BB4FE963
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Courier
%!FontType1-1.0: Courier 1.0000.1.0000
14 dict begin/FontName /Courier def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /one put
dup 34 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1341 1 index div -838 2 index div 2177 3 index div 2231 5 -1 roll div]cvx def
/sfnts [<


003A002F00220016000000082BBF0005005F004A003D002C0016000000082BBF00060041003A002F00220016000000082B00BF00010050004A002F00220016000000082BBF0002005F004A003D002C0016000000082BBF00030048003A002F00220016000000082B00BA0007000400072BB8000020457D6918440000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/Omegagreek 3 def
/Omegagreek.mono 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1341 -838 2177 2231}def
/UniqueID 4459673 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5593A4CA8EDA7BA9920B3E316B42F6C580C691FBCE004340131C993D0F1A3A789023FFFC228FE51791ED8110F521503CCE25C52414755D5D3984DD0A27C71220FD57D5901CB3C5B598E419C748E9E02A39234D98B60525967ADEA203AEC1A34CE54516013E7F2FC655251E12DAA13B3736E7D8DC05E2FDA4F214A18BC42547936DBC34C04CBABD22AFC5C2DFCC4E18B3E28E06915B94CC41F99CF4F9086D2F999782AE9BD7CCE0B24786FC21DF956927D7663AD9D8A79ECF5856EF5A82F224BAC218A89F93B435A25162C2A99ED47A6C9F437AB6C2297398DB1AF4EDC9635B6F67A94B7E6BB0A5AEC4F5ACA89E8D2626BD9DD897E4CD70415A80392344DBD59F9B2336601CA03241D03AADD5CC75B4AA6DCBCCADB4C20D1706FBCF46A787D05F80F4C64E5E65E799E55BFD34744017F19FC1FCA267CB6D7BDC0E1BF4C2BBAA0CBB78C302E2856EE95E1567C5010B73CB523182F880754BA95903B6EADCF584518CA93D87C86FA070AD98A7189EC6771274A74DA18A9C1F478F9CBE9102CC17B5E8404679E027B08DF4F84D14679C71F6ADEACDBD8BF75328AB41F955E9235EE9F0CD69A1753070D69CD4E6FF988ACB9E00F5B98E61C1F3DB33AC93CA454509D311F750215D732C44687AC3719C9DBB6E292D979757264BB2A96EDE685483DA43D6EC97755D3CFDF637FF517AE15FE4E8AD7CBD8F427479AEB8FAF76E5603254D77B4D03F1B4A63E35B548D2942060BAB82A290026FF76D50956BB88F4975BFDD838CEDD48E519D6971865BB41B3C8C4D3F80B60D0ED7CF639AED6AF6C7D798D9F150267
CBCC68427FE99765FEF4524D2A756B60B811F4340D9320179223253E8B57C94DDFB78B58A48E818D4B1D4B7E2CCEB65DA133669E1DF7015A5AD4AE00A69019C91FBF41C4C617DF070DD00D67393D1E1C0CDFDEA5B919230A5FE37FEA8EE3F8A279A9AEFD206D198AFCE48CBFCEF730CDBCD91E18BDEA2C5DCD7208FF1172494A51A7EB218A3DF9C636536070D80B000AF8825D2242CA328BE0027F6BAB31FF8AD1AAA43A71C22FD6901F28CAEF579D0091559FFB0A05E0EFBC4BA4FB4C23EDA5A9C704A03F22C5123B36C78E7B619BC48453B6D8EB7EEB746EE08E702E523FA3EC4D9042A3B497B26193B34D238F0DFFE410AA405B3A031C4337479D924FD283D3E070B65D5526845FFC21B70C718E2F1A0CDBE35B16C0A726732127741CECCE60BFEA1C4E47ED8626F6A5A42C7D908C519AB1B23E74B98AA3320DAF52C7E503BFF41B99B2E6825DC37540D640EFD9C378E5005D3164276083962F00B470F94BB1C3CC6CF8CF75C2F2F56048908E49BBAA888385F5DF0728253C90B7E678D6555F18E3C805B62E97D6C553C10DF1B0F809A36E3DC618C3B4A93F7212
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Courier cguidfix
/F2.1/Courier renmfont
%RBIBeginFontSubset: HelveticaNeue-Thin
%!FontType1-1.0: HelveticaNeue-Thin 1.0000.1.0010
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /HelveticaNeue-Thin def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /braceright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -356 1 index div -316 2 index div 1205 3 index div 1114 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/braceright 1 def
/u20BC 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-356 -316 1205 1114}def
/UniqueID 4441552 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0924A672D5CF65F4127319ED2FA6F1D9EA42D905267E40537F6200FD72B1908145A1DCB9D3A7BA50E09F214C2EB2AD0E94F617384BD2BE2912D41E674738270DDD7B8C4CE26FEC43766F4AB002A8C9BE41D3EFC9773220B1F7CD98EAD515AEE9FF94712AA81D7F1B422033AC3CEFF26B77B3E6EE744C2DACB8A8050AB10621667C5245B579EB0988629B67A856823FE00DE03B198C17430913ED7ACA66C5FC1B3BE12AE5D922825CE1BC231CEE4A1C642F240BACA4A12E5F6BB95E269F13AA76FF5EEF437E279FE3B55CF05331F17791C3FBEC3BBA6FC08ADB5FDF21E57C5BF3318DDF68B4F5D7DD3A80EB59E62E7ECF5F0C96EB47E753E9FC27BA00129E85555E418DB47D3D80A9B59607A63DFB30409447F604BA75F4C9CE149C8C467A5052DEF4CF8D652807F25E2363A53E3B959413B280E74E5579D41F0FBCB890BD043CFC32AB2C3060064C82F1D5A87F1F2BBC8B7343448F10FF42D2FDCED409B03628170BB4B8CB0E1694FBF352D584F053DA7068ED582A1A86AE18A518E13BBC9872D5ADB80411DE12E0686B02EEFF103B23B14D6AEBEA9DA9A7987273BDD81A72D2A47DEDAA59FE47942CFA4AB5A350EA245E551D495E677589B3F4110BEB95F4FBDFDB0AE7205B3F6CE551054AE7A03B25A7BE580CD4704D71DC145FD0480EC5F382605E550840CA6ECD08A022BEAB05F4E4CA632F588593E1164E886E8FC02B1442D43F7E776D
2FF0A6DCB2FB8432ED5F332021357CBD469CD3634C3E76E4F779D92B379F67CA8957310F6746A50F8BC6DF2982099E8F5BA5F51682A635F7DE0749CBAA0DF17B030B86149720E39DD69ECFF1131740F405E21670D9AF0911B982B2E1B491FAA34951434A91DECDD782F2F308F32E87C036DEBDB8DAA0EDAC3799AC287E64E072311E350F242B9200479816D4E6372524E14292EB5D17B1BD020B306BAA75A63E087EAF1FEC1BBD7714DFF4512AABACA28C3686EF233D87D807
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Thin cguidfix
/F3.1/HelveticaNeue-Thin renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.85490197 0.85490197 0.85490197 sc
q
0 0 487 327 rc
143.25108 218.59055 m
424.97421 218.59055 l
424.97421 107.92467 l
143.25108 107.92467 l
h
143.25108 218.59055 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -509 383 cm
652.2511 164.40945 m
933.97424 164.40945 l
933.97424 275.07532 l
652.2511 275.07532 l
h
652.2511 164.40945 m
S
[
1
4
] 0 d
651.96851 191.84572 m
934.01575 191.84572 l
S
708.76526 165.42862 m
708.76526 276.09448 l
S
680.50818 164.96371 m
680.50818 275.62961 l
S
737.02234 164.96371 m
737.02234 275.62961 l
S
793.5365 165.42862 m
793.5365 276.09448 l
S
765.27942 164.96371 m
765.27942 275.62961 l
S
821.79358 164.96371 m
821.79358 275.62961 l
S
878.30774 165.42862 m
878.30774 276.09448 l
S
850.05066 164.96371 m
850.05066 275.62961 l
S
906.56488 164.96371 m
906.56488 275.62961 l
S
651.96851 219.282 m
934.01575 219.282 l
S
651.96851 247.27255 m
934.01575 247.27255 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 210.83466 230.51968 cm
/F1.1[ 16 0 0 -16 0 0]sf
-54.866142 5.776001 m
(!")[ 15.396000 0.000000 ] xS
/Cs1 SC
0.69411767 0 0.10980392 sc
-28.522142 5.776001 m
(#)s
/Cs2 SC
0 sc
-13.126143 5.776001 m
("$"%)[ 10.948000 15.396000 10.948000 0.000000 ] xS
1 0 0 -1 350.47244 230.51968 cm
24.795408 5.776001 m
(%)s
46.995407 5.776001 m
(#&)[ 8.896000 0.000000 ] xS
1 0 0 -1 132.11024 163.59055 cm
-8 -34.723999 m
(!)s
-8 -7.723999 m
(#)s
/Cs1 SC
0.69411767 0 0.10980392 sc
-8 19.276001 m
($)s
/Cs2 SC
0 sc
-8 46.276001 m
(')s
[] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
549.82678 168.07086 m
572.50397 168.07086 l
572.50397 190.74803 l
549.82678 190.74803 l
h
549.82678 168.07086 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 52.165359 203.59055 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.8007812 5.5 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
549.82678 196.67717 m
572.50397 196.67717 l
572.50397 219.35432 l
549.82678 219.35432 l
h
549.82678 196.67717 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 52.165359 174.98425 cm
-4.8007812 5.5 m
(")s
1 0 0 -1 19.826777 205.09055 cm
/F1.1[ 14 0 0 -14 0 0]sf
-13.748 4.8040009 m
(\(\)*"#)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 19.826777 176.48425 cm
-13.748 4.8040009 m
(\(\)*"+)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 74.003944 192.92914 cm
/F3.1[ 33 0 0 -33 0 0]sf
-5.5 12.021385 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
662.62994 86.692917 m
685.30707 86.692917 l
685.30707 109.37008 l
662.62994 109.37008 l
h
662.62994 86.692917 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 164.96851 284.96851 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.8007812 5.5 m
(")s
1 0 0 -1 164.96851 312.8071 cm
/F1.1[ 14 0 0 -14 0 0]sf
-13.748 4.8040009 m
(\(\)*"$)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
790.18896 86.692917 m
812.86615 86.692917 l
812.86615 109.37008 l
790.18896 109.37008 l
h
790.18896 86.692917 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 292.52756 284.96851 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.8007812 5.5 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
747.66931 86.692917 m
770.34644 86.692917 l
770.34644 109.37008 l
747.66931 109.37008 l
h
747.66931 86.692917 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 250.00787 284.96851 cm
-4.8007812 5.5 m
(")s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
705.1496 86.692917 m
727.82678 86.692917 l
727.82678 109.37008 l
705.1496 109.37008 l
h
705.1496 86.692917 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 207.48819 284.96851 cm
-4.8007812 5.5 m
(")s
1 0 0 -1 207.48819 312.8071 cm
/F1.1[ 14 0 0 -14 0 0]sf
-13.748 4.8040009 m
(\(\)*"')[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 250.00787 312.8071 cm
-13.748 4.8040009 m
(\(\)*",)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 292.00787 312.8071 cm
-13.748 4.8040009 m
(\(\)*"&)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
/Cs3 SC
190 0 0 41 146 239 cm
BI
/Width 570
/Height 123
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
_Z0UFqZ-Vc[f6Eo_NEdW"&HVlqnE+(s8Hg2!</46s4mYRo(rFd%E\Y9rrVK&Ol69B:VGle[f?@'qZ-U!
Q2ei'rdjqHrdD6T!p[Xbi;`sU^#f.'s7u]oMYdDQFb0SGs8EW-!<2E.s7ZHoo#O,A!!5I-o"P/')>aF5
k*>sts3q"bs8HO*!</LprrhcA[q78Y!!FoZM:1h's7ZKlC\n,2P_&kis8MTd!<*GLs60Icmanp[0'`K?
/mO7]m]ullqYL9l"dT,,s8ITH!<.DQrrhcA[q78Y!!FoZM:1h$s7u]oMYdDQFb0SGs8EW-!<2E.s7QBo
o!*dOd/X8RM7<5ms8Eo5!<2,Gs+14!s2+g8A,?9*S?Dl,qr#o>T94_EAoN?YH#R_JOe8]!i9n#QpAb,-
qZ-V[JcFO*rpopdrXI!Lj8Tkki6oK7Ob.OaE.WplE,^)bT<$5pm]HNgqYL9l"dT,,s8ITH!<.DLrtYFh
d__W=JoG=@Jr+blE-[S<X3KSjZN'b#regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*
rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`
qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!
Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:
rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?ql
q>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqH
rdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6
h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WX
Q2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:
regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)
ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;b
raYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNel
g&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^Hj
qZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>
bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`
ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'
rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2
rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3
qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBEqZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@t
aoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8e,R;braYg*rg\Q>bl@D:rbMB2rfi!6h#IBE
qZ-U)ao?qlq>^HjqZ-U!Q2ei'rdjqHrdB@taoD2:regRQrcNelg&M$`qZ-W`ao?qlq>^F3qZ-WXQ2cF8
e,R;braYg*ra15HbaeBsr^$D]rfi!6h#IBEqZ-U$addpPq4.GPqZ-U!Q2ei'rdjqHr_.m5adi0sr`&ap
rcNelg&M$`qZ-VXaddpPq4.EpqZ-WXQ2cF8e,R;braUKZ_Z9'(rfi!6h#IBE^]8ocn,WFkQ2ei'rdfV#
^]<j(rcNelg&M$`^]8ocn,WIMQ2cF8e,R;brf)I/_Z9'(rk<s`h#IBPrZB#XJH50>r\'Q:`W,q<JH3Ic
n,WH[JcFF'r]@mqJH59ArYGM0Q2cF8e,R;brq68MJRc]0o4.c1rh4oCf)P`qrbf_cJRe:]rc8"iQ2ei'
rql\_JRcT-o4.carqV-Fg&M'+rcH%fJReC`rbVSVP5g+5e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$e,P"!ZN'q'l20fHJcC<$JcC<$JcC<$JcDYJm/-e\oDaCAJcC<$e,P"!
ZN'o]li@"rli2P9JcC<$JcC<$JcC<$WrN'jli@$7oDaCAJcC<$e,P"!ZN'ohli@#<li2P9JcC<$JcC<$
JcC<$WrN'`li@$BoDaCAJcC<$e,P"!ZN'ohli@#-li2P9JcC<$JcC<$JcC<$WrN'`li@$BoDaCAJcC<$
e,P"!ZN'ohli@#-li2P9JcC<$JcC<$JcC<$WrN'`li@$BoDaCAJcC<$e,P"!ZN'ohli@#-li2P9JcC<$
JcC<$JcC<$WrN'`li@$BoDaCAJcC<$e,P"!ZN'ohli@#-li2P9JcC<$JcC<$JcC<$WrN'`li@$BoDaCA
JcC<$e,P"!ZN'ohli@#-li2P9JcC<$JcC<$JcC<$WrN'`li@$BoDaCAJcC<$e,P"!ZN'ohli@#-li2P9
JcC<$JcC<$JcC<$WrN'`li@$BoDaCAJcC<$e,P"!ZN'ohli@#<li2P9JcC<$JcC<$JcC<$WrN'Jli@$B
oDaCAJcC<$e,P"!ZN'p9li@"rli2P9JcC<$JcC<$JcC<$WrN&Oli@$BoDaCAJcC<$e,P"!ZN'pbklC_X
mf.k<JcC<$JcC<$JcC<$WrM;`rg!*TJcC<$JcF4!JcE%Urp&_Jr_2b[JcC<$JcC<$JcC<$JcDkPri,,^
rnm>IJcC<$JcF4!JcDqRrXe;orh&`\JcC<$JcC<$JcC<$JcDtSrp&VGrr2NhJcC<$JcF4!JcDqRrk%:m
r`T7!p]#gEJcC<$JcC<$JcC<$ZiC$1joGCGnGe(>JcC<$e,P"!XT/8`irK(XqYu-HJcC<$JcC<$JcC<$
\c;ZirZL>'rZLV.JcC<$JcF4!JcD_LrXdufrdOq/!T`>@rIP!'s+13$s+13$s+13hs8MurjSkeN&E<ci
&H;[rs+13$s+14!s+13Is8F\/!;lir+T?!PZMrqapjrI1s+13$s+13$s+14%s8Muro)@>ATDi!m&D@-`
55tQHs+13$s+14!s+13Fs8Kpq!9sR`&H4lmB)\(pZMqc@df/>,lMgARq#:0irVleIs2+ees+13$s+13'
s8N#srVl]nq#9j`mf);Hdf./`ZMp-gF8el4+Njca&H9l6s+13$s+14!s+13@s8L4@0C&VF!;d?#+T!gC
+Qaft+T!hh55n7T=oN%4J,Y?)TDl.q_uA?gjSnTHq#:5Cs53jMs8Murq#9^\hu;(']Def/Q2Z:4B)Ys4
9`@6Q09.0R+T;B?0D-I_&=rn$9`Er+s+13$s+14!s+13:s8Mop_u=9?!.b-$!2'>k&H4?^9`BP@TDm%5
jSniOrdk+Js1JC2qu60cg&A;VMZ-cX0E)N6!8[^,!4Dn,+T?lig&Cs&s+13$s+14!s+13.s8Mophu9ST
AcZLUr\&g&L&co-rXf&mrdXpZroF(RO8mW-rr)iarmLe2r`T4CJH3RfJH3akrXf&mreg]mrpKdbbl<7o
JcC<$e,P"!JcGQGrr)ihroF(,rj)NgrcA'Ar]^<7rXaV\WW7SMn,WG@rdXpbrplZ\i;`fLrmLe2r_3;&
JH2qTJH5$:rXf&Or\+7Erau.eri,n/rmLf2rqQKl])R?]JcC<$e,P"!JcF0uqu6TnrqlTfo(E"QJb@Oc
lh1/GqsOIKroF(9rn7:orkn`@rh'1IrcA'Nr_3;ErXc13r\+8.rnm_RXoIkirr2oXrh'0RZN0t9r\+77
r`T5Areg]Srj)O@rmLf!roF(DrpK[Sqt9OTrq69]\FkjSrposZqtU'crr)iqOT0n3JcC<$e,P"!JcC<$
JcE%Urr2oorq69Urn7:_rg!J(r]^;m_>sQXrg!KJ[f?.&rpKcbr\)4jr\+7RrdXpHrlb<%rpp'crr.KK
lMlG8JcC<$JcC<$e,P"!JcC<$JcCl4rql]_rmLe<rau-Pb5hNErmLfF_Z0Vmrc?HerZM2Prh'2-roF(O
rr.KKbl<7oJcC<$JcC<$e,P"!JcC<$JcC<$r;Zckrnm^Srau-@e,]JArn5^!rpp&<rW(XPr\+8.rmLf=
JcE+WJcC<$JcC<$JcF4!JcC<$JcC<$JcG-;rr2o^ri,ljf)Yf"rqPFOrn79(p]0FVrXf'droF(XJcD\K
JcC<$JcC<$JcF4!JcC<$JcC<$JcFU,rpKcXrZL"srdXqHm/R(.rXeW#mf<>0rj)OuJcD8?JcC<$JcC<$
JcF4!JcC<$JcC<$JcF:#rql],r\*10rn6uErpKb.li?e\rXf($rqM'EPQ-46JcC<$JcC<$e,P"!JcC<$
JcC<$bl@\;rh&3Nrg!B\ri,#[rW)p]rni;,MZ88-JcC<$JcC<$e,P"!JcC<$JcC<$_uK_hrXe;or_3;o
joGB`rpkX?K`?W'JcC<$JcC<$e,P"!JcC<$JcC<$^&S)Dd/a/0rpp'gJcC<$JcC<$JcC<$JcF4!JcC<$
JcC<$JcE=]rql[Jg&V-0q#>pFJcC<$JcC<$JcC<$e,P"!JcC<$JcC<$[/^+:irK(Do)F:@JcC<$JcC<$
JcC<$e,P"!JcC<$JcC<$[/^-rklC]*rpoOXJcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcF4!J,
~> %APLeod
EI
0.74901962 0.11764706 0.16470589 sc
CM
169.89764 164.68504 m
200.71654 164.68504 l
200.71654 134.68504 l
169.89764 134.68504 l
h
169.89764 164.68504 m
f
/Cs2 SC
0 sc
1 0 0 -1 328.12994 287.21259 cm
/F1.1[ 16 0 0 -16 0 0]sf
-11.472 5.776001 m
(-"#)[ 9.600000 4.448000 0.000000 ] xS
1 0 0 -1 91.610245 191.7874 cm
-11.472 5.776001 m
(-"$)[ 9.600000 4.448000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
695.90552 242.27559 m
695.90552 242.27559 691.39148 271.87152 707 289.5 c
716.72485 300.48337 731.41187 303.60324 741.10266 304.39465 c
S
0 i
CM
240.10011 78.520218 m
232.13249 81.605186 l
232.06863 75.605522 l
h
240.10011 78.520218 m
f
0 J
0 j
1 0 0 -1 -509 383 cm
749.1001 304.47977 m
741.13251 301.39481 l
741.06866 307.39447 l
h
749.1001 304.47977 m
S
1 J
1 j
0.60000002 i
793.20471 295.37009 m
815.8819 295.37009 l
815.8819 318.04724 l
793.20471 318.04724 l
h
793.20471 295.37009 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 295.54333 76.291336 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.8007812 5.5 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
913.10236 295.37009 m
935.77954 295.37009 l
935.77954 318.04724 l
913.10236 318.04724 l
h
913.10236 295.37009 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 415.44095 76.291336 cm
-4.8007812 5.5 m
(")s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
874.5827 295.37009 m
897.25989 295.37009 l
897.25989 318.04724 l
874.5827 318.04724 l
h
874.5827 295.37009 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 376.92126 76.291336 cm
-4.8007812 5.5 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -509 383 cm
833.55908 295.37009 m
856.23621 295.37009 l
856.23621 318.04724 l
833.55908 318.04724 l
h
833.55908 295.37009 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 335.89764 76.291336 cm
-4.8007812 5.5 m
(!)s
1 0 0 -1 261.10236 78.952751 cm
/F1.1[ 16 0 0 -16 0 0]sf
-15.92 5.776001 m
(#,"-)[ 8.896000 8.896000 4.448000 0.000000 ] xS
1 0 0 -1 185.3071 149.68504 cm
-8.8959999 5.776001 m
(#,)[ 8.896000 0.000000 ] xS
1 0 0 -1 297.19687 52.452755 cm
/F1.1[ 14 0 0 -14 0 0]sf
-13.748 4.8040009 m
(\(\)*"#)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 335.71655 52.452755 cm
-13.748 4.8040009 m
(\(\)*"$)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 376.23624 52.452755 cm
-13.748 4.8040009 m
(\(\)*"')[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
1 0 0 -1 417.23624 52.452755 cm
-13.748 4.8040009 m
(\(\)*",)[ 8.302000 3.108000 4.410000 3.892000 0.000000 ] xS
/Cs1 SC
0.13725491 0.36862746 0 sc
1 0 0 -1 75.169296 287.21259 cm
/F1.1[ 16 0 0 -16 0 0]sf
-33.200001 5.776001 m
(\)./0*"\(\)*1)[ 3.552000 8.896000 9.488000 8.896000 5.040000 4.448000 9.488000 3.552000 5.040000 0.000000 ] xS
0.69411767 0 0.10980392 sc
1 0 0 -1 442.23624 15.956178 cm
-38.535999 5.776001 m
(20*/0*"\(\)*1)[ 9.184000 8.896000 5.040000 9.488000 8.896000 5.040000 4.448000 9.488000 3.552000 5.040000 0.000000 ] xS
0.60000002 i
0.13725491 0.36862746 0 sc
1 0 0 -1 -509 383 cm
545.66931 101 m
545.66931 101 532.73938 111.35274 530 127 c
528.65173 134.70139 530.08417 141.90292 531.88666 147.231 c
S
0 i
CM
26.210215 228.49692 m
25.613337 237.02003 l
20.156263 234.52599 l
h
26.210215 228.49692 m
f
0 J
0 j
1 0 0 -1 -509 383 cm
535.21021 154.50308 m
534.61334 145.97997 l
529.15625 148.47401 l
h
535.21021 154.50308 m
S
1 J
1 j
0.60000002 i
584.11023 84.921257 m
584.11023 84.921257 591.0498 73.227264 610 69 c
621.01111 66.543724 633.06873 67.279533 641.23907 68.327179 c
S
0 i
CM
140.1273 313.32095 m
132.74901 317.62915 l
131.7355 311.71539 l
h
140.1273 313.32095 m
f
0 J
0 j
1 0 0 -1 -509 383 cm
649.12732 69.679062 m
641.74902 65.370834 l
640.73553 71.284622 l
h
649.12732 69.679062 m
S
1 J
1 j
0.60000002 i
0.69411767 0 0.10980392 sc
974.21301 354.56079 m
974.21301 354.56079 977.17932 338.26471 968.9812 324.65839 c
964.94623 317.96152 959.1405 313.46619 954.28461 310.62759 c
S
0 i
CM
438.00537 75.680267 m
444.04752 69.639366 l
446.52979 75.101814 l
h
438.00537 75.680267 m
f
0 J
0 j
1 0 0 -1 -509 383 cm
947.00537 307.31973 m
953.04755 313.36063 l
955.52979 307.89819 l
h
947.00537 307.31973 m
S
ep
end
