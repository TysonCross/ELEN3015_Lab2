%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 458.000000 415.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.4 (Build 17E199) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 458 415
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 458 415
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /three put
dup 34 /two put
dup 35 /hyphen put
dup 36 /b put
dup 37 /i put
dup 38 /t put
dup 39 /s put
dup 40 /L put
dup 41 /space put
dup 42 /one put
dup 43 /R put
dup 44 /E put
dup 45 /x put
dup 46 /p put
dup 47 /a put
dup 48 /n put
dup 49 /o put
dup 50 /D put
dup 51 /four put
dup 52 /eight put
dup 53 /S put
dup 54 /X put
dup 55 /O put
dup 56 /K put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/eight 7 def
/D 8 def
/E 9 def
/K 10 def
/L 11 def
/O 12 def
/R 13 def
/S 14 def
/X 15 def
/a 16 def
/b 17 def
/i 18 def
/n 19 def
/o 20 def
/p 21 def
/s 22 def
/t 23 def
/x 24 def
/uni2B91 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9264C9384F249EBFD8DD5BFBB9BE844B0E83BCFE532E688793A86D21BB50B73F1E4CB55B3332FA078523601D7D59E771AAD72B0C3150466C78199AB7245DDDDDB744BE485E1956EC9C8F9F94015171004093B221EFCEA2ED2C5237FD6408A1F600E98635D7DADBC919FE934A0308C9DB49FC8A2E6388E218A031CF70011B474C6881708041BA286C6873591793D7FB2A2E4683735FE2BD2B2A21D2BFEE34C131508A6CEFB34B2E4C5D9C4996FA6370600E0F59651901100EF39CFAA7B81F58D66381BD8A3FE53213C014625DF108958083F8125FF0264CCF7CE50F0E541908E48B43D4B86F0E5D7C26CA677B0A0116B87D65B1CD608B39F2F7F7BF5EDAE3AABA9B5627C87B01A5597DE20CD4CB79A1AFDC1AEC11A140BF06ADD1BA5A3AC5D1AA92A0EEA4D578152924B09C4F909B118C09897862123E2E1085E586D5427107E578A017196AA68A4300C96348BDFA7DDE46EA24B7D396764011429991B6EAEA82A5124812B3792405917899884C37397E6EF1FF46A41E6F59A69313858F90A2E4B34F8E2C419A143C2F3B55192E1A8AE3EC4F8AD65B30B9643FE341CD117B0A95FD467FC41BF974649CA3F58A9B0AB4FC92B707BEA99BFE551B348181AC907A50A172ABF15F8ED5FAE9BC7129F8B878E71B058941B3DD1B6B21750BDA0A861E8B38B0994FC80455D17FD20827FA8D412844A74143906ED1FB9EDC6F93932A02F660221DDB1A2BDC9FFED9F791F0BB932B6AFC5AFE31A3679DA87646673C6CE9DFE5

0FC3DB0CE463493866E1937AE83EFA3124EEE4107B5A70293B4323756D4CD6B20065956045CEA7959BD4C28F436A5ED5D7A6AC1AE13CE6960C33FBC0CF6EAB8457DBBD4D58EF372714493A67610DFD53945DBFB7DB673AFD73DBC683C1632C6B83D67046EA17D634FFAD12D90DD1AB17DBB3FFAFA8974D326CE9736822FD9B42FC592D9068CCD8675C6160FD9905335D5046B173C6CF0D07B86E912E164FBEB22BC8B9654DC90CAC3BBBCBE63CC01B811BEA6E4DC8515879780984D31364C0244EE13F41B360262842B7AA7D14375939E095932ECD8241AF2AD228813DF49C2508C29222395D08C845C49F140D15112461269B86CCA56A4C3CA6B3CCC3C6C127B3ACBCABE76CE357BA71F913D295551120D2566402857504E701CEE27788AD276D8BA8B670E975D23D0F34ECDC37ADBE2BB8FCDFB4FA74842E8FA2F683613FA4D95544DC98FB2CEC64B0D64037503802ED0004FE52A553B375D8155C07C48F94EE18F1C8ED3E43720AC3030BB4AC13DC73C843B4BB182931A9707E3BBC02FDA109AC7535C163D052CEBF748254FC7DBD124730E6C600B67E0968E2B7412744596624809D687F1C0B45114C86DDB4193BC1D7F88E6AE426543303DC3A4F9EA6A870D412CA76F331B41D12C46F3714240C9BD1C861DE91B6D04AA4D7AD0EF5F5878D1348C50F8BF3D55B55632CBC45A870D4C5B82627532358AA527C69773303D3D04BF02F4DCD6ECB2050B9E6CCFC7937D40AFFF4C2DAAC1D017E321C7B825FE69E0B71283928DFEAB6AE95F08E19663C778335B0DF337A0DCA1DF32AB852FAD942AFAB671045834210B121FD7B545E55594E21D927E8F9AF5DD7C43A13CFB24881E7161641623F172F09AED52EAA3511120EB14573E9DF52DFFBE62E0C7323FAFC113C9CCA199079BEECA3ADBB22DB3FEC6E693B4B6A3C0789524CD14DE6C066D548788CF09B6478C0785A502827DEEC5C062FC2D7D23552D5EC889A9EFC5B1214156762D831D49771B93FA280EC44FD33B1DF833739CF8C9D34DA069F258EFFA21AE0FAE62F6AB607F4EC96CCDDC4E431EA27EA2CFD4B0A0860001FFC6EAB6DE7EEC31852F6966918C54483CAD84F23874FF1FD1F0EAEC418B530586997BD9D557375EAFB31151C583BE5AD4BC73A286CDE08EA66187A33D6FB0411C42773FFE5DC20E9D4B597A38F3D2FD60D8B2B85FCD552443E6739ED0BA9F4AC281CD7A73010D8045EE45CBF2E9532DCE49959DE0017AD29DB0CA467F0305624E0866567D8500F7D6E2168BDB82E095C0AB5EC8CA4E4A3AE834F94CBB0A09D692895BC60BAB0F73C83EBF6D1CB90E08061D508D67DDE119F1A7C6461E012A1D791F5DEE82542EBFE7B509D121FAC37B7CA2FAB400D151848B46EE85AAF78E7D23F6E83A71EDB5C61AE1E5B7F84938E28B3195D035B1858218471CC4674811E2BF07D96FD
DFB16896EE5BA6B8F9BD61DDEE3B325E49434A5468753E1A81B48BFB2C7917D98F196A6E5186222A262D63875DBA5CED2A7C4B747DAE781F4ED30ED66FADC95A8558B648F3385B7CF28CE9EBBF416EEFF36EC9997B04F4451C70C0A0A2DC94A7BD4A2128ABCC8F7C9444B695F6AD8671A7A6F61C853A04E5DFE4BDD859D7E80DCD044842980E2814099E6502F1C5A229098C129C76B414AC14EB0D34BDCB3EF469565B1CAE16851A6F533F661378DE58152117D31E38DD1B2DFE3B765B825B76E96E32A3965831F78ADBF3CBA909C754D86C8B6EBCAF5D18447E2133FA567848F1F975D74B35EE94A6821A9FC4304F25CDBB384850DAD71E6ACDF9433B6661DE98673FB20826EDBEBE2C22B73B22E9531F8AA719FF173F578DBD63B3F72EC126FF77FDB3FE1971CE0D4345BD4498707C034C914EB394D0AA2D9D172500096EFFED7C223B879E39A6C243312892BBE2535D0AD65E4CFA2056CB24A3F4E3C3350941236155FB6EBFC4ECB630744F41A57025CDC5802EEB33FD4107795096EE411AF6AEE8E4213C5590B3B37BC6EF4CED29632CD8B61D367F6A4EA3DEEF1BB7C688F6A8216E5BE7940A5ACE61F428E7D51AECE6DCAC0C7044441F02CA05EB85C963F02A625376FEAE5F6DDC61145967037176811ACF6FA7551BB9D11C88B0559584068274BF62C665B2A970EC2AE4BFD91E24269AD62905E46AB61F0B29DC25F461723061303432100BC500F62759167A552073E79C977FFB584F832BAE85FA6F7D3734CCE1FB7871CD3E9EB3AFCA3519A552AB9C64EB08A979B9A1F5A14AB805C6B1FC4D25E9F915664F7C4C8A90FE059AF49573C41F6E5FCDD69647F34208330F470CE83E3072165973301284D05A66C17E532F8C117AA2591E37474ED4A80EEF6BC1A6C0F076F488168FEB27FD727F94CAF1BA0A7E80FB4A7BD63177778EF64312CE2AC5FAB089D58801BC628C6BB8EEEBB4B4C0AD3A01E17BE70D55DCE3A57583EC539BAE18BCA38FD2B0E017A8A5A94A0003C1A7406BBFF1CE04ACBFF40846051123E0F989AF7078B3C320CEBD1D3E9D6828E2C51FD120F02439E030A78A756FF1F5753DA698263AE592113C47E3139B5C8540849D0A7283A3E43BAA2D85CA77781384E9D291CDAE33E7FDA6817AE99C3A1E8CBB92DFFACC5A9AC79D08647AA1A3A9B3E8DA76E6E9558C9F80915A79A296676A507A2BAB7B895921C82061246D2FA676A79547DD25A4EA5BE5F53111E8B5C39D4EC1247DFB81E57275949FDC4359BFADF59701677A1B73F22E6B50D2161D5175EA54D97BB47EAA39A2F1F6F13C862F2A35AB8CAA05D081E5828FFCBD48CAB4C9A86ED81DBD6541BB3903EC2C4477D042DF0511B7525EF38DE41009E7B1F04638106B5E721B8CE71386AF563D6CED88CF18829A21908B9AFE54CED937859F447DF5958A625185240749A89F93
C135F90060DA12CB6A25C30D8987A64ECF86A05A598D98CBEF671E13D5D072CA78805E322175C829222D8722C1D277004DBAE0A30E975975ED313C53375AC20B8B64AE2E4E76B9CE85CF136E970EE8F04E25238152805B6164C46C49BBD91A8432D77F16F844ED0084B692E82560F611956D0B531404006BAE12297D73C9707A6280D5DFC75F3F7847F460374BBE5BBA7995CEFA15F0DA51F7D25B666456A92F3C87610C196BA9A4481E4D3A36DA44F0495FA98DBBC47310123FDC3D8243E05E89A1B3F51AE806B4197E6C60883F83C12EABE6E498E440B9583E3B846D0B447A30E48065C33ECE2A6A5F3886AC7E28815820A6CA597C2E0CC5079ED31B1FA927DED145D7F30249396A259A51DC26849ED25EFE5C2702879E2634D7F94417E35774313AC3D0E5D0E683AFFC278D85BE2885E5CB7D8A654D3AB130867C3F093CB150DD70EC52A9E644EA90BAB8AD9A51A1F421CA279012F2A88CAF3ECDB97638C4E45661C23B5C54BAD20D8D2B847AA4B7D890FCFFEC3CB20CDC5426F7ADE2140EACF590A5E48F9290C6E8EF7E48ABD93CFE5ABBAC833B38F49A4149E4D137E50195BCC3CE21A8B9AE091CB0A83F7B4335769A79988251D95C38CC6224D43ACE08860AF482ECC436CBC6CAA5C377D87E8E70FEB7909FAE9DCBFDBBB17C9F33DCCDDBE1048D8B5BD02AE680ED69AF48EFDE9CF8B960C99CECB5D9307DBE80E55B70BB7E9877AA296FCA30904B5659BB09328F5CB68F572A3FDA66548E4535EA9B584969B28EF8238ADEA13C27EAD609BDF64536BBCBA545D4950FC9D0614F6DA9E88A00624CA856AA043508C16A39DA5BEAA2E54439450B96B2D28EA24A034FE421CFE2B20C6F64C41E782F2DB65498BF929FA74758491FF68ABE053A61F5211429681675CC7C118E425903720C2D4AA6F4CCCF621B9D2FA627E4FC293CB9B188AF6AE2C01DEC527076B64077D97D2804102E7F2B66FE8CD2A000CD862A322A51734D453FF5C15DEC2A82B9033CD36593E3E6FBE1440827D84A3A7819D9C5EFB9AD06D2E5BB6FE46002A9D7E5C966419215BD7E3955B9018F98881C656A0E2DBE0FDA53D47D175A7AFA98C6B2761B93969D95AC8589EE5596A86928B2B87412116041D94D931827C53A48AA98A86041FC79DE9AAC1675B70A6960EC7C0B05ED73E1EFA3E4A666F9F18A7D54AB2AF111DF07725FFE49E1607C18BBE03E040382631F94376E97F0F9D7D33063BD0293DBC731F778E6E467FC0B76BBB85F0F3528974B506054A2E2E1D7A2CB05FC710C6CF18892ACB0A8AD3CC2F727074C777166FF4F915EFD747480861E80D57B2215E052E827634E2DAD9C44B9A35F8C2BA471026A5732F8F856038DB3878E28108D3E22DA1274EA38CD3F9F7FAF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: AppleSymbols
%!FontType1-1.0: AppleSymbols 1.0000.5.0000
14 dict begin/FontName /AppleSymbols def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /uni2A02 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -658 1 index div -743 2 index div 6283 3 index div 1966 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/uni2A02 1 def
/uni16F0 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-658 -743 6283 1966}def
/UniqueID 4354238 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0CBF41476A88137148272D68F00BF28F91188F04043C87873E412876B7419C78E5C32666F851DB001373375968A93CBF8097B55D54595176895AC04664F8A70F01C3F43C56EC16617DCBF3833193083641D52ABD93C46C3F0165957FEFBAF00912078AE286F9EF6638CD4BDBA2B30C4DE6D31E58B2A159F79B73512327997F7107D90409D42D307883C906F2F7410AB08DA7B616C4BDAE92D3305E31ED9F0968E7366B4E6967BC505388B4F9CA4C7C949BC94E75D4D6E4A574BAE80284657CFA82B505CF24BA108913C66D0D9F49AD6545D44E9C875F98C09697D0CDFA6B61C4D6C232A7CB73BCDFDEA55A2E235C9252DEAB696F00073DD5FED4A299AF0E4CEC8501128B473D03FF08B060BCD5B788E191C5723159D849C5FE9842C478F94CFEA06E93DBB3BEB10243FB085B83174A1149FB151940AE49D592D6E2D4E774F721EBC5E8486D1C2065B51A8E39B644563877F70B1AFC14405C383B231776A740C041FE26F9269A8471C5F419F8474E0A8ED638231203B12C6FDD39A8700648BCDF1C10CDCD9C0D8C9EF5AAFABA66F1B0D153880054517713E228403B16A427E071F964FACE43E675A8F9A6BBA6970469A31CC01BAF4CE9D497CC15F0FFD0235D77599DACCE9232F14F48EEC6327B6BE3ECC95FB1A86326B8424110BD1F1127B4C06BB1125E802357F4906648B08620B2E5FAD8B3A7C0BCAF3845693B45143910000D7FE832BED6
0A850FC5B6481B0B91C6FAFFD2C4EC5FB2E08ADD118F230342414846A54C6F95E16F625F49FCF46DB5A114827CFA76D03E6F49245AFBA12F28D075E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AppleSymbols cguidfix
/F2.1/AppleSymbols renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 458 415 rc
1 0 0 -1 178.33072 378.24802 cm
/F1.1[ 12 0 0 -12 0 0]sf
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 0 0 -1 368.25198 378.24802 cm
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1067.7441 18.992126 m
1251.9961 18.992126 l
1251.9961 45.921261 l
1067.7441 45.921261 l
h
1067.7441 18.992126 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 107.87009 398.5433 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(\()s
1 0 0 -1 126.12206 392.00394 cm
/F1.1[ 10 0 0 -10 0 0]sf
-8.6149998 3.8600006 m
(%\)#\)*)[ 2.220000 2.780000 3.890000 2.780000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1260 18.992126 m
1444.252 18.992126 l
1444.252 45.921261 l
1260 45.921261 l
h
1260 18.992126 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 300.12601 398.5433 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.48 5.776001 m
(+)s
1 0 0 -1 318.37796 392.00394 cm
/F1.1[ 10 0 0 -10 0 0]sf
-8.6149998 3.8600006 m
(%\)#\)*)[ 2.220000 2.780000 3.890000 2.780000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1070.0787 88.220474 m
1254.3307 88.220474 l
1254.3307 119.72441 l
1070.0787 119.72441 l
h
1070.0787 88.220474 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 107.87009 326.2756 cm
/F1.1[ 16 0 0 -16 0 0]sf
-61.784 5.776001 m
(,-./0'%10\)2#$1-)[ 9.776000 8.288000 9.488000 8.592000 8.896000 8.000000 3.552000 9.184000 8.896000 4.448000 11.264000 6.224000 9.488000 9.184000 0.000000 ] xS
1 0 0 -1 178.33072 302.92801 cm
/F1.1[ 12 0 0 -12 0 0]sf
-18.785999 3.8320007 m
(34#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 0 0 -1 106.20473 263.01968 cm
/F2.1[ 50 0 0 -50 0 0]sf
-23 7.9125977 m
(!)s
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1070.0787 205.03372 m
1254.3307 205.03372 l
1254.3307 236.53766 l
1070.0787 236.53766 l
h
1070.0787 205.03372 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 110.20473 209.46234 cm
/F1.1[ 16 0 0 -16 0 0]sf
-21.775999 5.776001 m
(5#$1-)[ 10.368000 6.224000 9.488000 9.184000 0.000000 ] xS
1 0 0 -1 56.704735 268.62094 cm
-16.448 5.776001 m
(67+)[ 9.776000 12.160000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1070.0787 270.70865 m
1254.3307 270.70865 l
1254.3307 302.21262 l
1070.0787 302.21262 l
h
1070.0787 270.70865 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 110.20473 143.7874 cm
-22.224001 5.776001 m
(2#$1-)[ 11.264000 6.224000 9.488000 9.184000 0.000000 ] xS
1 0 0 -1 352.66144 13.145665 cm
/F1.1[ 12 0 0 -12 0 0]sf
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1054.4882 382.41733 m
1238.7401 382.41733 l
1238.7401 409.34647 l
1054.4882 409.34647 l
h
1054.4882 382.41733 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 94.614182 35.118107 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(\()s
1 0 0 -1 105.86615 28.578737 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.5 3.8600006 m
(%)s
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1244.4094 382.41733 m
1428.6614 382.41733 l
1428.6614 409.34647 l
1244.4094 409.34647 l
h
1244.4094 382.41733 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 284.53543 35.118107 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.48 5.776001 m
(+)s
1 0 0 -1 298.78741 28.578737 cm
/F1.1[ 10 0 0 -10 0 0]sf
-2.5 3.8600006 m
(%\))[ 2.220000 0.000000 ] xS
1 0 0 -1 162.74017 13.145665 cm
/F1.1[ 12 0 0 -12 0 0]sf
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 0 0 -1 178.14174 186.05905 cm
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 0 0 -1 178.14174 120.52251 cm
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -1052 431 cm
1444.5867 162.48329 m
1189.0653 163.38248 l
S
0 i
CM
129.06534 267.58936 m
137.07585 264.61752 l
137.05473 270.61749 l
h
129.06534 267.58936 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1181.0653 163.41063 m
1189.0758 166.38246 l
1189.0547 160.38251 l
h
1181.0653 163.41063 m
S
1 J
1 j
0.60000002 i
1159.8701 46.421261 m
1159.8701 79.824409 l
S
0 i
CM
107.8701 343.1756 m
110.8701 351.1756 l
104.8701 351.1756 l
h
107.8701 343.1756 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1159.8701 87.824409 m
1162.8701 79.824409 l
1156.8701 79.824409 l
h
1159.8701 87.824409 m
S
1 J
1 j
0.60000002 i
1160.0375 119.72441 m
1160.1993 134.22498 l
S
0 i
CM
108.28868 288.77551 m
111.1992 296.8085 l
105.19957 296.74155 l
h
108.28868 288.77551 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1160.2887 142.22447 m
1163.1992 134.19148 l
1157.1996 134.25845 l
h
1160.2887 142.22447 m
S
1 J
1 j
0.60000002 i
1159.3701 181.41733 m
1159.6838 194.60216 l
S
0 i
CM
107.87407 228.40012 m
110.68294 236.46921 l
104.68463 236.32649 l
h
107.87407 228.40012 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1159.874 202.59988 m
1162.683 194.53079 l
1156.6847 194.67351 l
h
1159.874 202.59988 m
S
1 J
1 j
0.60000002 i
1162.2047 237.03766 m
1162.2047 260.30865 l
S
0 i
CM
110.20473 162.69133 m
113.20473 170.69133 l
107.20473 170.69133 l
h
110.20473 162.69133 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1162.2047 268.30865 m
1165.2047 260.30865 l
1159.2047 260.30865 l
h
1162.2047 268.30865 m
S
1 J
1 j
0.60000002 i
1162.2047 302.71262 m
1162.2047 328.41733 l
1330.1654 354.41733 l
1331.0212 371.62329 l
S
0 i
CM
279.41861 51.386581 m
282.01749 59.525742 l
276.0249 59.227665 l
h
279.41861 51.386581 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1331.4186 379.61343 m
1334.0175 371.47427 l
1328.0249 371.77234 l
h
1331.4186 379.61343 m
S
1 J
1 j
0.60000002 i
1352.126 46.421261 m
1352.126 328.41733 l
1163.5524 354.41733 l
1162.6965 371.62329 l
S
0 i
CM
110.29913 51.386581 m
113.69286 59.227665 l
107.70026 59.525742 l
h
110.29913 51.386581 m
f
0 J
0 j
1 0 0 -1 -1052 431 cm
1162.2991 379.61343 m
1165.6929 371.77234 l
1159.7003 371.47427 l
h
1162.2991 379.61343 m
S
1 J
1 j
0.60000002 i
1445.0867 148.90692 m
1507.6221 148.90692 l
1507.6221 175.83606 l
1445.0867 175.83606 l
h
1445.0867 148.90692 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 424.35434 268.62851 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.336 5.776001 m
(8)s
1 0 0 -1 434.69293 263.01968 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1 3.8600006 m
(%)s
1 0 0 -1 433.10239 246.01968 cm
/F1.1[ 12 0 0 -12 0 0]sf
-18.785999 3.8320007 m
(34#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 0 0 -1 180.97639 234.08267 cm
-18.785999 3.8320007 m
(34#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
1 0 0 -1 178.33072 351.64285 cm
-18.785999 3.8320007 m
(!"#$%&')[ 6.672000 6.672000 4.668000 7.116000 2.664000 3.780000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
